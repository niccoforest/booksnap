import React, { useEffect, useState } from 'react';
import Slider from 'react-slick';
import { 
  Box, 
  IconButton, 
  useTheme, 
  useMediaQuery 
} from '@mui/material';
import { 
  ArrowBackIos as PrevIcon, 
  ArrowForwardIos as NextIcon 
} from '@mui/icons-material';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';

// Componente Custom per le Frecce di Navigazione
const CustomArrow = ({ direction, onClick }) => {
  const theme = useTheme();
  
  return (
    <IconButton
      onClick={onClick}
      sx={{
        position: 'absolute',
        top: '50%',
        transform: 'translateY(-50%)',
        zIndex: 10,
        backgroundColor: 'rgba(93, 95, 239, 0.1)', // Colore primario con opacitÃ 
        width: 40,
        height: 40,
        [direction === 'prev' ? 'left' : 'right']: -20,
        '&:hover': {
          backgroundColor: 'rgba(93, 95, 239, 0.2)',
        }
      }}
    >
      {direction === 'prev' ? <PrevIcon fontSize="small" /> : <NextIcon fontSize="small" />}
    </IconButton>
  );
};

const BookCarousel = ({ 
  books = [], 
  onBookClick,
  maxVisible = 6,
  autoplay = false,
  centerMode = true
}) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));
  const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));
  const [slidesToShow, setSlidesToShow] = useState(3);

  useEffect(() => {
    if (isMobile) setSlidesToShow(1);
    else if (isTablet) setSlidesToShow(2);
    else setSlidesToShow(3);
  }, [isMobile, isTablet]);

  const settings = {
    infinite: true,
    speed: 500,
    slidesToShow: Math.min(slidesToShow, books.length),
    slidesToScroll: 1,
    autoplay: autoplay,
    centerMode: centerMode,
    centerPadding: '30px',
    nextArrow: <CustomArrow direction="next" />,
    prevArrow: <CustomArrow direction="prev" />,
    responsive: [
      {
        breakpoint: 1280,
        settings: { slidesToShow: 3, centerMode: true }
      },
      {
        breakpoint: 960,
        settings: { slidesToShow: 2, centerMode: true }
      },
      {
        breakpoint: 600,
        settings: { slidesToShow: 1, centerMode: true }
      }
    ]
  };

  return (
    <Box sx={{
      '& .slick-list': {
        margin: '0 -20px', // Correzione spaziatura
        padding: '0 20px'  // Padding per frecce
      },
      '& .slick-slide': {
        padding: '0 10px', // Spaziatura tra slide
        boxSizing: 'border-box'
      },
      '& .slick-dots': {
        bottom: -30,
        '& li button:before': {
          color: theme.palette.primary.main,
          opacity: 0.3
        },
        '& li.slick-active button:before': {
          color: theme.palette.primary.main,
          opacity: 1
        }
      }
    }}>
      <Slider {...settings}>
        {books.slice(0, maxVisible).map((book) => (
          <Box key={book._id} onClick={() => onBookClick(book._id)}>
            {/* Il tuo componente BookCard qui */}
          </Box>
        ))}
      </Slider>
    </Box>
  );
};

export default BookCarousel;